# -*- coding: utf-8 -*-
"""K_means_without_lib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O0ZtqJysto3oz3Ci3ZSzMghXPJ3u-1Yg
"""

import numpy as np
from sklearn import datasets
from sklearn.datasets import load_iris
import random
import pandas as pd
from matplotlib import pyplot as plt

def head_point_dist(X1, X2):
    return(sum((X1 - X2)**2))**0.5

iris=pd.read_csv("/content/drive/MyDrive/Iris.csv")
x=iris.to_numpy()
cluster_indices= np.random.choice(len(x), size=3, replace=False)
cluster_heads=[]
for i in cluster_indices:
  cluster_heads.append(x[i])
cluster_heads=np.array(cluster_heads)

cluster_heads

def nearest_centroid(ic, X):
    assigned_centroid = []
    for i in X:
        distance=[]
        for j in ic:
            distance.append(head_point_dist(i, j))
        assigned_centroid.append(np.argmin(distance))
    return(assigned_centroid)

get_centroids = nearest_centroid(cluster_heads, x)
get_centroids

def calc_centroids(clusters, x):
  new_centroids={}
  c_values=[]
  for i in range(len(get_centroids)):
    if get_centroids[i] not in new_centroids.keys():
      new_centroids[get_centroids[i]]=[x[i]]
    else:
      new_centroids[get_centroids[i]].append(x[i])
  for key in new_centroids.keys():
    c_values.append(np.mean(new_centroids[key],axis=0))
  return c_values

all_clusters=[]
get_new_clusters=[]
final_clusters={}
dict_cc={}
df_pk=iris.copy(deep=True)
for i in range(100):
    get_centroids = nearest_centroid(cluster_heads, x)
    centroids = calc_centroids(get_centroids, x)
    get_new_clusters = nearest_centroid(centroids, x)
    
    if get_centroids==get_new_clusters:

        break
    else:
      cluster_heads=centroids
      print(get_new_clusters)
      continue

for i in range(len(get_new_clusters)):
    if get_new_clusters[i] not in final_clusters.keys():
      final_clusters[get_new_clusters[i]]=[i]
    else:
      final_clusters[get_new_clusters[i]].append(i)

print(final_clusters)
for i,value in final_clusters.items():
    
    for k in value:
        dict_cc[k]=i
print(dict_cc)


df_cluserhead=pd.DataFrame.from_dict(dict_cc,orient='index')

df_clus=df_cluserhead.rename(columns={0:'CLusterhead'})

ff=df_pk.join(df_clus)
ff.to_csv('clustered_data.csv', sep='\t', encoding='utf-8')

